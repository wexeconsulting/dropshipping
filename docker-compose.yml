version: '3.8'

services:
  db:
    build:
      context: ./db
    container_name: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./app
    container_name: frontend
    ports:
      - "8501:8501"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  scheduler:
    build: ./app
    container_name: job_scheduler
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "batch.py"]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      FTP_HOST: ${FTP_HOST}
      FTP_USERNAME: ${FTP_USERNAME}
      FTP_PASSWORD: ${FTP_PASSWORD}
      SCHEDULER_TIMEZONE: ${SCHEDULER_TIMEZONE}


volumes:
  db_data: